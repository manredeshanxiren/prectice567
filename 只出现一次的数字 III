int* singleNumber(int* arr, int n, int* returnSize){
  int m = 0;
//1，先对所有的数字进行异或，找出两个只出现一次的数字的异或
  int x = 0;
for(int i = 0; i < n; i++)
{
        x ^= arr[i];
}
//2，然后找出两个数字任意一个为1的位x
while(m < 30)
{
    if(x & (1<<m))
    {
      break;
    }
    else
    ++m;
}
//3，用x位是否位1，将数字分成两组
//4，组内分别异或就可以得到x1，x2；
int x1 = 0, x2 = 0;
    for(int i = 0; i < n; i++)
    {
    if(arr[i] & (1 << m))
        x1 ^= arr[i];
    else
        x2 ^= arr[i];
    }
    int *a = (int *)malloc(sizeof(int) * 2);
    a[0] = x1;
    a[1] = x2;
    * returnSize = 2;
    return a;

}
